{
  "README.html": {
    "href": "README.html",
    "title": "Opgg-Clone | RiotStatsApi",
    "summary": "Opgg-Clone"
  },
  "api/RiotApiStats.Models.DTOs.ParticipantDTO.html": {
    "href": "api/RiotApiStats.Models.DTOs.ParticipantDTO.html",
    "title": "Class ParticipantDTO | RiotStatsApi",
    "summary": "Class ParticipantDTO Namespace RiotApiStats.Models.DTOs Assembly RiotApiStats.dll public class ParticipantDTO Inheritance object ParticipantDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Assists [JsonProperty(\"assists\")] public int Assists { get; set; } Property Value int ChampionLevel [JsonProperty(\"champLevel\")] public int ChampionLevel { get; set; } Property Value int ChampionName [JsonProperty(\"championName\")] public string ChampionName { get; set; } Property Value string Deaths [JsonProperty(\"deaths\")] public int Deaths { get; set; } Property Value int Item0 [JsonProperty(\"item0\")] public int Item0 { get; set; } Property Value int Item1 [JsonProperty(\"item1\")] public int Item1 { get; set; } Property Value int Item2 [JsonProperty(\"item2\")] public int Item2 { get; set; } Property Value int Item3 [JsonProperty(\"item3\")] public int Item3 { get; set; } Property Value int Item4 [JsonProperty(\"item4\")] public int Item4 { get; set; } Property Value int Item5 [JsonProperty(\"item5\")] public int Item5 { get; set; } Property Value int Item6 [JsonProperty(\"item6\")] public int Item6 { get; set; } Property Value int Kills [JsonProperty(\"kills\")] public int Kills { get; set; } Property Value int Puuid [JsonProperty(\"puuid\")] public string Puuid { get; set; } Property Value string RiotIdGameName [JsonProperty(\"riotIdGameName\")] public string RiotIdGameName { get; set; } Property Value string TeamId [JsonProperty(\"teamId\")] public int TeamId { get; set; } Property Value int Win [JsonProperty(\"win\")] public bool Win { get; set; } Property Value bool"
  },
  "api/RiotApiStats.Models.DTOs.html": {
    "href": "api/RiotApiStats.Models.DTOs.html",
    "title": "Namespace RiotApiStats.Models.DTOs | RiotStatsApi",
    "summary": "Namespace RiotApiStats.Models.DTOs Classes ParticipantDTO"
  },
  "api/RiotApiStats.Pages.ErrorModel.html": {
    "href": "api/RiotApiStats.Pages.ErrorModel.html",
    "title": "Class ErrorModel | RiotStatsApi",
    "summary": "Class ErrorModel Namespace RiotApiStats.Pages Assembly RiotApiStats.dll [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public class ErrorModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Inheritance object PageModel ErrorModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ErrorModel(ILogger<ErrorModel>) public ErrorModel(ILogger<ErrorModel> logger) Parameters logger ILogger<ErrorModel> Properties RequestId public string? RequestId { get; set; } Property Value string ShowRequestId public bool ShowRequestId { get; } Property Value bool Methods OnGet() public void OnGet()"
  },
  "api/RiotApiStats.Pages.IndexModel.html": {
    "href": "api/RiotApiStats.Pages.IndexModel.html",
    "title": "Class IndexModel | RiotStatsApi",
    "summary": "Class IndexModel Namespace RiotApiStats.Pages Assembly RiotApiStats.dll public class IndexModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Inheritance object PageModel IndexModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IndexModel(ILogger<IndexModel>) public IndexModel(ILogger<IndexModel> logger) Parameters logger ILogger<IndexModel> Methods OnGet() public void OnGet()"
  },
  "api/RiotApiStats.Pages.PrivacyModel.html": {
    "href": "api/RiotApiStats.Pages.PrivacyModel.html",
    "title": "Class PrivacyModel | RiotStatsApi",
    "summary": "Class PrivacyModel Namespace RiotApiStats.Pages Assembly RiotApiStats.dll public class PrivacyModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Inheritance object PageModel PrivacyModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PrivacyModel(ILogger<PrivacyModel>) public PrivacyModel(ILogger<PrivacyModel> logger) Parameters logger ILogger<PrivacyModel> Methods OnGet() public void OnGet()"
  },
  "api/RiotApiStats.Pages.html": {
    "href": "api/RiotApiStats.Pages.html",
    "title": "Namespace RiotApiStats.Pages | RiotStatsApi",
    "summary": "Namespace RiotApiStats.Pages Classes ErrorModel IndexModel PrivacyModel"
  },
  "api/RiotStatsAPI.Controllers.HelloController.html": {
    "href": "api/RiotStatsAPI.Controllers.HelloController.html",
    "title": "Class HelloController | RiotStatsApi",
    "summary": "Class HelloController Namespace RiotStatsAPI.Controllers Assembly RiotApiStats.dll [ApiController] [Route(\"api/[controller]\")] public class HelloController : ControllerBase Inheritance object ControllerBase HelloController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Get() [HttpGet] public IActionResult Get() Returns IActionResult"
  },
  "api/RiotStatsAPI.Controllers.RiotController.html": {
    "href": "api/RiotStatsAPI.Controllers.RiotController.html",
    "title": "Class RiotController | RiotStatsApi",
    "summary": "Class RiotController Namespace RiotStatsAPI.Controllers Assembly RiotApiStats.dll [ApiController] [Route(\"api/[controller]\")] public class RiotController : ControllerBase Inheritance object ControllerBase RiotController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RiotController(RiotApiService, AppDbContext, ILogger<RiotController>) public RiotController(RiotApiService riotApiService, AppDbContext dbContext, ILogger<RiotController> logger) Parameters riotApiService RiotApiService dbContext AppDbContext logger ILogger<RiotController> Methods GetAccountAndSummoner(string, string) [HttpGet(\"account/{gameName}/{tagLine}\")] public Task<IActionResult> GetAccountAndSummoner(string gameName, string tagLine) Parameters gameName string tagLine string Returns Task<IActionResult> GetMatchParticipants(string) [HttpGet(\"match-participants/{gameId}\")] public Task<IActionResult> GetMatchParticipants(string gameId) Parameters gameId string Returns Task<IActionResult> RefreshRecentMatches(string) [HttpGet(\"refresh-matches/{puuid}\")] public Task<IActionResult> RefreshRecentMatches(string puuid) Parameters puuid string Returns Task<IActionResult>"
  },
  "api/RiotStatsAPI.Controllers.html": {
    "href": "api/RiotStatsAPI.Controllers.html",
    "title": "Namespace RiotStatsAPI.Controllers | RiotStatsApi",
    "summary": "Namespace RiotStatsAPI.Controllers Classes HelloController RiotController"
  },
  "api/RiotStatsAPI.Data.AppDbContext.html": {
    "href": "api/RiotStatsAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | RiotStatsApi",
    "summary": "Class AppDbContext Namespace RiotStatsAPI.Data Assembly RiotApiStats.dll public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>) public AppDbContext(DbContextOptions<AppDbContext> options) Parameters options DbContextOptions<AppDbContext> Properties Accounts public DbSet<Account> Accounts { get; set; } Property Value DbSet<Account> Matches public DbSet<Matches> Matches { get; set; } Property Value DbSet<Matches> Participants public DbSet<Participant> Participants { get; set; } Property Value DbSet<Participant> Summoners public DbSet<Summoner> Summoners { get; set; } Property Value DbSet<Summoner> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples."
  },
  "api/RiotStatsAPI.Data.html": {
    "href": "api/RiotStatsAPI.Data.html",
    "title": "Namespace RiotStatsAPI.Data | RiotStatsApi",
    "summary": "Namespace RiotStatsAPI.Data Classes AppDbContext"
  },
  "api/RiotStatsAPI.Migrations.AddSummonerEntity.html": {
    "href": "api/RiotStatsAPI.Migrations.AddSummonerEntity.html",
    "title": "Class AddSummonerEntity | RiotStatsApi",
    "summary": "Class AddSummonerEntity Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250408210906_AddSummonerEntity\")] public class AddSummonerEntity : Migration Inheritance object Migration AddSummonerEntity Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.FixedRelationships.html": {
    "href": "api/RiotStatsAPI.Migrations.FixedRelationships.html",
    "title": "Class FixedRelationships | RiotStatsApi",
    "summary": "Class FixedRelationships Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250409172358_FixedRelationships\")] public class FixedRelationships : Migration Inheritance object Migration FixedRelationships Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.InitialCreate.html": {
    "href": "api/RiotStatsAPI.Migrations.InitialCreate.html",
    "title": "Class InitialCreate | RiotStatsApi",
    "summary": "Class InitialCreate Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250408204220_InitialCreate\")] public class InitialCreate : Migration Inheritance object Migration InitialCreate Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.InitialMigration.html": {
    "href": "api/RiotStatsAPI.Migrations.InitialMigration.html",
    "title": "Class InitialMigration | RiotStatsApi",
    "summary": "Class InitialMigration Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250608213659_InitialMigration\")] public class InitialMigration : Migration Inheritance object Migration InitialMigration Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.MigrationAccount_sync.html": {
    "href": "api/RiotStatsAPI.Migrations.MigrationAccount_sync.html",
    "title": "Class MigrationAccount_sync | RiotStatsApi",
    "summary": "Class MigrationAccount_sync Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250610181123_MigrationAccount_sync\")] public class MigrationAccount_sync : Migration Inheritance object Migration MigrationAccount_sync Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.MigrationChampionLevel.html": {
    "href": "api/RiotStatsAPI.Migrations.MigrationChampionLevel.html",
    "title": "Class MigrationChampionLevel | RiotStatsApi",
    "summary": "Class MigrationChampionLevel Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250608220953_MigrationChampionLevel\")] public class MigrationChampionLevel : Migration Inheritance object Migration MigrationChampionLevel Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.MigrationChampionName.html": {
    "href": "api/RiotStatsAPI.Migrations.MigrationChampionName.html",
    "title": "Class MigrationChampionName | RiotStatsApi",
    "summary": "Class MigrationChampionName Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250608220852_MigrationChampionName\")] public class MigrationChampionName : Migration Inheritance object Migration MigrationChampionName Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.MigrationItems_Teamid.html": {
    "href": "api/RiotStatsAPI.Migrations.MigrationItems_Teamid.html",
    "title": "Class MigrationItems_Teamid | RiotStatsApi",
    "summary": "Class MigrationItems_Teamid Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250610170701_MigrationItems_Teamid\")] public class MigrationItems_Teamid : Migration Inheritance object Migration MigrationItems_Teamid Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.MigrationParticipant.html": {
    "href": "api/RiotStatsAPI.Migrations.MigrationParticipant.html",
    "title": "Class MigrationParticipant | RiotStatsApi",
    "summary": "Class MigrationParticipant Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250610183707_MigrationParticipant\")] public class MigrationParticipant : Migration Inheritance object Migration MigrationParticipant Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.MigrationParticipant_EDIT.html": {
    "href": "api/RiotStatsAPI.Migrations.MigrationParticipant_EDIT.html",
    "title": "Class MigrationParticipant_EDIT | RiotStatsApi",
    "summary": "Class MigrationParticipant_EDIT Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250610184658_MigrationParticipant_EDIT\")] public class MigrationParticipant_EDIT : Migration Inheritance object Migration MigrationParticipant_EDIT Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.MigrationParticipant_type_change.html": {
    "href": "api/RiotStatsAPI.Migrations.MigrationParticipant_type_change.html",
    "title": "Class MigrationParticipant_type_change | RiotStatsApi",
    "summary": "Class MigrationParticipant_type_change Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250610191712_MigrationParticipant_type_change\")] public class MigrationParticipant_type_change : Migration Inheritance object Migration MigrationParticipant_type_change Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.UpdateSummonerEntity.html": {
    "href": "api/RiotStatsAPI.Migrations.UpdateSummonerEntity.html",
    "title": "Class UpdateSummonerEntity | RiotStatsApi",
    "summary": "Class UpdateSummonerEntity Namespace RiotStatsAPI.Migrations Assembly RiotApiStats.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250408212152_UpdateSummonerEntity\")] public class UpdateSummonerEntity : Migration Inheritance object Migration UpdateSummonerEntity Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RiotStatsAPI.Migrations.html": {
    "href": "api/RiotStatsAPI.Migrations.html",
    "title": "Namespace RiotStatsAPI.Migrations | RiotStatsApi",
    "summary": "Namespace RiotStatsAPI.Migrations Classes AddSummonerEntity A base class inherited by each EF Core migration. FixedRelationships A base class inherited by each EF Core migration. InitialCreate A base class inherited by each EF Core migration. InitialMigration A base class inherited by each EF Core migration. MigrationAccount_sync A base class inherited by each EF Core migration. MigrationChampionLevel A base class inherited by each EF Core migration. MigrationChampionName A base class inherited by each EF Core migration. MigrationItems_Teamid A base class inherited by each EF Core migration. MigrationParticipant A base class inherited by each EF Core migration. MigrationParticipant_EDIT A base class inherited by each EF Core migration. MigrationParticipant_type_change A base class inherited by each EF Core migration. UpdateSummonerEntity A base class inherited by each EF Core migration."
  },
  "api/RiotStatsAPI.Models.DTOs.AccountDTO.html": {
    "href": "api/RiotStatsAPI.Models.DTOs.AccountDTO.html",
    "title": "Class AccountDTO | RiotStatsApi",
    "summary": "Class AccountDTO Namespace RiotStatsAPI.Models.DTOs Assembly RiotApiStats.dll public class AccountDTO Inheritance object AccountDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GameName [JsonProperty(\"gameName\")] public string? GameName { get; set; } Property Value string Puuid [JsonProperty(\"puuid\")] public required string Puuid { get; set; } Property Value string tagLine [JsonProperty(\"tagLine\")] public string? tagLine { get; set; } Property Value string"
  },
  "api/RiotStatsAPI.Models.DTOs.InfoDTO.html": {
    "href": "api/RiotStatsAPI.Models.DTOs.InfoDTO.html",
    "title": "Class InfoDTO | RiotStatsApi",
    "summary": "Class InfoDTO Namespace RiotStatsAPI.Models.DTOs Assembly RiotApiStats.dll public class InfoDTO Inheritance object InfoDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EndOfGameResult [JsonProperty(\"endOfGameResult\")] public string EndOfGameResult { get; set; } Property Value string GameCreation [JsonProperty(\"gameCreation\")] public long GameCreation { get; set; } Property Value long GameDuration [JsonProperty(\"gameDuration\")] public long GameDuration { get; set; } Property Value long GameEndTimestamp [JsonProperty(\"gameEndTimestamp\")] public long GameEndTimestamp { get; set; } Property Value long GameId [JsonProperty(\"gameId\")] public long GameId { get; set; } Property Value long GameMode [JsonProperty(\"gameMode\")] public string GameMode { get; set; } Property Value string GameName [JsonProperty(\"gameName\")] public string GameName { get; set; } Property Value string GameStartTimestamp [JsonProperty(\"gameStartTimestamp\")] public long GameStartTimestamp { get; set; } Property Value long GameType [JsonProperty(\"gameType\")] public string GameType { get; set; } Property Value string GameVersion [JsonProperty(\"gameVersion\")] public string GameVersion { get; set; } Property Value string MapId [JsonProperty(\"mapId\")] public int MapId { get; set; } Property Value int Participants [JsonProperty(\"participants\")] public List<ParticipantDTO> Participants { get; set; } Property Value List<ParticipantDTO> PlatformId [JsonProperty(\"platformId\")] public string PlatformId { get; set; } Property Value string QueueId [JsonProperty(\"queueId\")] public string QueueId { get; set; } Property Value string"
  },
  "api/RiotStatsAPI.Models.DTOs.MatchDTO.html": {
    "href": "api/RiotStatsAPI.Models.DTOs.MatchDTO.html",
    "title": "Class MatchDTO | RiotStatsApi",
    "summary": "Class MatchDTO Namespace RiotStatsAPI.Models.DTOs Assembly RiotApiStats.dll public class MatchDTO Inheritance object MatchDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties InfoDto [JsonProperty(\"info\")] public InfoDTO InfoDto { get; set; } Property Value InfoDTO MetaDataDto [JsonProperty(\"metadata\")] public MetaDataDTO MetaDataDto { get; set; } Property Value MetaDataDTO"
  },
  "api/RiotStatsAPI.Models.DTOs.MetaDataDTO.html": {
    "href": "api/RiotStatsAPI.Models.DTOs.MetaDataDTO.html",
    "title": "Class MetaDataDTO | RiotStatsApi",
    "summary": "Class MetaDataDTO Namespace RiotStatsAPI.Models.DTOs Assembly RiotApiStats.dll public class MetaDataDTO Inheritance object MetaDataDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DataVersion [JsonProperty(\"dataVersion\")] public string DataVersion { get; set; } Property Value string MatchId [JsonProperty(\"matchId\")] public string MatchId { get; set; } Property Value string Participants [JsonProperty(\"participants\")] public List<string> Participants { get; set; } Property Value List<string>"
  },
  "api/RiotStatsAPI.Models.DTOs.SummonerDto.html": {
    "href": "api/RiotStatsAPI.Models.DTOs.SummonerDto.html",
    "title": "Class SummonerDto | RiotStatsApi",
    "summary": "Class SummonerDto Namespace RiotStatsAPI.Models.DTOs Assembly RiotApiStats.dll public class SummonerDto Inheritance object SummonerDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountId [JsonProperty(\"accountId\")] public string AccountId { get; set; } Property Value string ProfileIconId [JsonProperty(\"profileIconId\")] public int ProfileIconId { get; set; } Property Value int Puuid [JsonProperty(\"puuid\")] public string Puuid { get; set; } Property Value string RevisionDate [JsonProperty(\"revisionDate\")] public long RevisionDate { get; set; } Property Value long SummonerId [JsonProperty(\"id\")] public string SummonerId { get; set; } Property Value string SummonerLevel [JsonProperty(\"summonerLevel\")] public long SummonerLevel { get; set; } Property Value long"
  },
  "api/RiotStatsAPI.Models.DTOs.html": {
    "href": "api/RiotStatsAPI.Models.DTOs.html",
    "title": "Namespace RiotStatsAPI.Models.DTOs | RiotStatsApi",
    "summary": "Namespace RiotStatsAPI.Models.DTOs Classes AccountDTO InfoDTO MatchDTO MetaDataDTO SummonerDto"
  },
  "api/RiotStatsAPI.Models.Entities.Account.html": {
    "href": "api/RiotStatsAPI.Models.Entities.Account.html",
    "title": "Class Account | RiotStatsApi",
    "summary": "Class Account Namespace RiotStatsAPI.Models.Entities Assembly RiotApiStats.dll public class Account Inheritance object Account Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GameName [JsonProperty(\"gameName\")] public string? GameName { get; set; } Property Value string GameTag [JsonProperty(\"tagLine\")] public string? GameTag { get; set; } Property Value string Id public long Id { get; set; } Property Value long Puuid [JsonProperty(\"puuid\")] public string Puuid { get; set; } Property Value string Summoner public Summoner? Summoner { get; set; } Property Value Summoner lastSynced public DateTime? lastSynced { get; set; } Property Value DateTime?"
  },
  "api/RiotStatsAPI.Models.Entities.Matches.html": {
    "href": "api/RiotStatsAPI.Models.Entities.Matches.html",
    "title": "Class Matches | RiotStatsApi",
    "summary": "Class Matches Namespace RiotStatsAPI.Models.Entities Assembly RiotApiStats.dll public class Matches Inheritance object Matches Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountId public long AccountId { get; set; } Property Value long Assists [JsonProperty(\"assists\")] public int Assists { get; set; } Property Value int ChampionLevel [JsonProperty(\"champLevel\")] public int ChampionLevel { get; set; } Property Value int ChampionName [JsonProperty(\"championName\")] public string ChampionName { get; set; } Property Value string Deaths [JsonProperty(\"deaths\")] public int Deaths { get; set; } Property Value int GameCreation [JsonProperty(\"gameCreation\")] public long GameCreation { get; set; } Property Value long GameDuration [JsonProperty(\"gameDuration\")] public long GameDuration { get; set; } Property Value long GameId [JsonProperty(\"gameId\")] public string GameId { get; set; } Property Value string GameMode [JsonProperty(\"gameMode\")] public string GameMode { get; set; } Property Value string Id public long Id { get; set; } Property Value long Item0 [JsonProperty(\"item0\")] public int Item0 { get; set; } Property Value int Item1 [JsonProperty(\"item1\")] public int Item1 { get; set; } Property Value int Item2 [JsonProperty(\"item2\")] public int Item2 { get; set; } Property Value int Item3 [JsonProperty(\"item3\")] public int Item3 { get; set; } Property Value int Item4 [JsonProperty(\"item4\")] public int Item4 { get; set; } Property Value int Item5 [JsonProperty(\"item5\")] public int Item5 { get; set; } Property Value int Item6 [JsonProperty(\"item6\")] public int Item6 { get; set; } Property Value int Kills [JsonProperty(\"kills\")] public int Kills { get; set; } Property Value int TeamId [JsonProperty(\"teamId\")] public int TeamId { get; set; } Property Value int Win [JsonProperty(\"win\")] public bool Win { get; set; } Property Value bool"
  },
  "api/RiotStatsAPI.Models.Entities.Participant.html": {
    "href": "api/RiotStatsAPI.Models.Entities.Participant.html",
    "title": "Class Participant | RiotStatsApi",
    "summary": "Class Participant Namespace RiotStatsAPI.Models.Entities Assembly RiotApiStats.dll public class Participant Inheritance object Participant Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Assists public int Assists { get; set; } Property Value int ChampionLevel public int ChampionLevel { get; set; } Property Value int ChampionName public string ChampionName { get; set; } Property Value string Deaths public int Deaths { get; set; } Property Value int GameId public string GameId { get; set; } Property Value string Id public long Id { get; set; } Property Value long Item0 public int Item0 { get; set; } Property Value int Item1 public int Item1 { get; set; } Property Value int Item2 public int Item2 { get; set; } Property Value int Item3 public int Item3 { get; set; } Property Value int Item4 public int Item4 { get; set; } Property Value int Item5 public int Item5 { get; set; } Property Value int Item6 public int Item6 { get; set; } Property Value int Kills public int Kills { get; set; } Property Value int Puuid public string Puuid { get; set; } Property Value string RiotIdGameName public string RiotIdGameName { get; set; } Property Value string TeamId public int TeamId { get; set; } Property Value int Win public bool Win { get; set; } Property Value bool"
  },
  "api/RiotStatsAPI.Models.Entities.Summoner.html": {
    "href": "api/RiotStatsAPI.Models.Entities.Summoner.html",
    "title": "Class Summoner | RiotStatsApi",
    "summary": "Class Summoner Namespace RiotStatsAPI.Models.Entities Assembly RiotApiStats.dll public class Summoner Inheritance object Summoner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Account public Account Account { get; set; } Property Value Account AccountId public long AccountId { get; set; } Property Value long EncryptedAccountId [JsonProperty(\"encryptedAccountId\")] public string EncryptedAccountId { get; set; } Property Value string Id public long Id { get; set; } Property Value long ProfileIconId [JsonProperty(\"profileIconId\")] public int ProfileIconId { get; set; } Property Value int Puuid [JsonProperty(\"puuid\")] public string Puuid { get; set; } Property Value string RevisionDate [JsonProperty(\"revisionDate\")] public long RevisionDate { get; set; } Property Value long SummonerId [JsonProperty(\"id\")] public string SummonerId { get; set; } Property Value string SummonerLevel [JsonProperty(\"summonerLevel\")] public long SummonerLevel { get; set; } Property Value long"
  },
  "api/RiotStatsAPI.Models.Entities.html": {
    "href": "api/RiotStatsAPI.Models.Entities.html",
    "title": "Namespace RiotStatsAPI.Models.Entities | RiotStatsApi",
    "summary": "Namespace RiotStatsAPI.Models.Entities Classes Account Matches Participant Summoner"
  },
  "api/RiotStatsAPI.Services.RiotApiService.html": {
    "href": "api/RiotStatsAPI.Services.RiotApiService.html",
    "title": "Class RiotApiService | RiotStatsApi",
    "summary": "Class RiotApiService Namespace RiotStatsAPI.Services Assembly RiotApiStats.dll public class RiotApiService Inheritance object RiotApiService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RiotApiService(HttpClient, string, AppDbContext) public RiotApiService(HttpClient httpClient, string apiKey, AppDbContext dbContext) Parameters httpClient HttpClient apiKey string dbContext AppDbContext Methods GetAccount(string, string) public Task<Account> GetAccount(string gameName, string tagLine) Parameters gameName string tagLine string Returns Task<Account> GetMatch(string) public Task<MatchDTO> GetMatch(string matchId) Parameters matchId string Returns Task<MatchDTO> GetMatchIds(string, long?, long?, int?, string?, int, int) public Task<List<string>> GetMatchIds(string puuid, long? startTime, long? endTime, int? queue, string? type, int start = 0, int count = 20) Parameters puuid string startTime long? endTime long? queue int? type string start int count int Returns Task<List<string>> GetRiotApiData<T>(string) public Task<T> GetRiotApiData<T>(string url) Parameters url string Returns Task<T> Type Parameters T GetSummoner(string, long) public Task<Summoner> GetSummoner(string puuid, long accountId) Parameters puuid string accountId long Returns Task<Summoner>"
  },
  "api/RiotStatsAPI.Services.html": {
    "href": "api/RiotStatsAPI.Services.html",
    "title": "Namespace RiotStatsAPI.Services | RiotStatsApi",
    "summary": "Namespace RiotStatsAPI.Services Classes RiotApiService"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | RiotStatsApi",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | RiotStatsApi",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | RiotStatsApi",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}